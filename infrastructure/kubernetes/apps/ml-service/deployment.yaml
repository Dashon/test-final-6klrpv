apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-service
  namespace: ai-travel-platform
  labels:
    app: ml-service
    component: ai
    part-of: ai-travel-platform
spec:
  # Running 3 replicas for high availability and load distribution
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      # Ensure zero-downtime deployments
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: ml-service
  template:
    metadata:
      labels:
        app: ml-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: ml-service
        image: ai-travel-platform/ml-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        resources:
          requests:
            # Resource requests based on ML model requirements
            cpu: "1000m"
            memory: "2Gi"
            nvidia.com/gpu: "1"
          limits:
            cpu: "2000m"
            memory: "4Gi"
            nvidia.com/gpu: "1"
        envFrom:
        - configMapRef:
            name: ai-travel-platform-config
        - secretRef:
            name: platform-secrets
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 10
        volumeMounts:
        - name: ml-models
          mountPath: /app/models
        - name: model-cache
          mountPath: /app/cache
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
      volumes:
      - name: ml-models
        persistentVolumeClaim:
          claimName: ml-models-pvc
      - name: model-cache
        emptyDir: {}
      # Node selection for GPU-enabled instances
      nodeSelector:
        cloud.google.com/gke-accelerator: nvidia-tesla-t4
      # Tolerations for GPU nodes
      tolerations:
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule