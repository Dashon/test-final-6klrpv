apiVersion: v1
kind: Service
metadata:
  name: social-service
  namespace: ai-travel-platform
  labels:
    app: ai-travel-platform
    component: social-service
    version: 1.0.0
    tier: backend
    managed-by: kubernetes
  annotations:
    # Prometheus monitoring configuration
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
    
    # Service metadata
    service.kubernetes.io/description: "Social service handling real-time communication"
    service.kubernetes.io/latency-sla: "200ms"
    
    # Documentation
    kubernetes.io/documentation: "https://github.com/company/ai-travel-platform/docs/services/social"
    
    # Load balancing configuration
    service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "3600"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"

spec:
  # Using ClusterIP for internal service discovery
  type: ClusterIP
  
  # Port configuration for HTTP, WebSocket, and metrics
  ports:
    - name: http
      port: 3002
      targetPort: http
      protocol: TCP
    
    - name: websocket
      port: 8080
      targetPort: websocket
      protocol: TCP
    
    - name: metrics
      port: 9090
      targetPort: metrics
      protocol: TCP
  
  # Selector matching deployment labels
  selector:
    app: ai-travel-platform
    component: social-service
  
  # Session affinity for WebSocket connections
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      # 3-hour timeout for session stickiness
      timeoutSeconds: 10800
  
  # Publishing not ready addresses for graceful termination
  publishNotReadyAddresses: false
  
  # Internal traffic policy for improved performance
  internalTrafficPolicy: Cluster