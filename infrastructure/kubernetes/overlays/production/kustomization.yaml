# Production Kustomization Configuration for AI-Enhanced Social Travel Platform
# Version: 1.0.0
# Environment: Production
# Deployment: Multi-Region
# Security Level: High
# Monitoring: Enhanced

apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

# Production namespace configuration
namespace: ai-travel-platform-prod
namePrefix: prod-

# Common metadata for all resources
commonLabels:
  environment: production
  app: ai-travel-platform
  managed-by: kustomize
  region: multi-region
  version: 1.0.0
  security-tier: high
  backup-enabled: "true"
  monitoring: enhanced

commonAnnotations:
  platform.ai/environment: production
  platform.ai/version: 1.0.0
  platform.ai/backup: enabled
  platform.ai/monitoring: enhanced
  platform.ai/security: strict
  platform.ai/compliance: enabled
  platform.ai/multi-region: enabled
  platform.ai/last-updated: "2024-01-20"
  platform.ai/maintainer: "platform-team@company.com"

# Base resources and service deployments
resources:
  - ../../base/namespace.yaml
  - ../../base/configmap.yaml
  - ../../base/secrets.yaml
  - ../../apps/api-gateway/deployment.yaml
  - ../../apps/api-gateway/service.yaml
  - ../../apps/booking-service/deployment.yaml
  - ../../apps/booking-service/service.yaml
  - ../../apps/ml-service/deployment.yaml
  - ../../apps/ml-service/service.yaml
  - ../../apps/persona-service/deployment.yaml
  - ../../apps/persona-service/service.yaml
  - ../../apps/professional-service/deployment.yaml
  - ../../apps/professional-service/service.yaml
  - ../../apps/social-service/deployment.yaml
  - ../../apps/social-service/service.yaml
  - pod-disruption-budget.yaml
  - network-policies.yaml
  - service-monitor.yaml
  - horizontal-pod-autoscaler.yaml

# Production-specific patches for all deployments
patches:
  - target:
      kind: Deployment
      name: ".*"
    patch: |
      spec:
        replicas: 3
        strategy:
          type: RollingUpdate
          rollingUpdate:
            maxSurge: 1
            maxUnavailable: 0
        template:
          metadata:
            annotations:
              prometheus.io/scrape: 'true'
              prometheus.io/port: '8080'
              prometheus.io/path: '/metrics'
          spec:
            securityContext:
              runAsNonRoot: true
              runAsUser: 1000
              fsGroup: 2000
            topologySpreadConstraints:
              - maxSkew: 1
                topologyKey: topology.kubernetes.io/zone
                whenUnsatisfiable: DoNotSchedule
                labelSelector:
                  matchLabels:
                    app: ai-travel-platform
            affinity:
              podAntiAffinity:
                preferredDuringSchedulingIgnoredDuringExecution:
                  - weight: 100
                    podAffinityTerm:
                      topologyKey: kubernetes.io/hostname
                      labelSelector:
                        matchLabels:
                          app: ai-travel-platform
            containers:
              - name: .*
                resources:
                  requests:
                    cpu: 500m
                    memory: 512Mi
                  limits:
                    cpu: 1000m
                    memory: 1Gi
                readinessProbe:
                  httpGet:
                    path: /health
                    port: 8080
                  initialDelaySeconds: 10
                  periodSeconds: 30
                  timeoutSeconds: 5
                  successThreshold: 1
                  failureThreshold: 3
                livenessProbe:
                  httpGet:
                    path: /health
                    port: 8080
                  initialDelaySeconds: 15
                  periodSeconds: 30
                  timeoutSeconds: 5
                  successThreshold: 1
                  failureThreshold: 3
                startupProbe:
                  httpGet:
                    path: /health
                    port: 8080
                  failureThreshold: 30
                  periodSeconds: 10

# Production environment configuration
configMapGenerator:
  - name: prod-env-config
    behavior: merge
    literals:
      - NODE_ENV=production
      - LOG_LEVEL=info
      - SERVICE_MESH_ENABLED=true
      - TRACING_ENABLED=true
      - MONITORING_LEVEL=enhanced
      - BACKUP_ENABLED=true
      - MULTI_REGION_ENABLED=true
      - MAX_CONNECTIONS=20000
      - RATE_LIMIT_WINDOW=60000
      - RATE_LIMIT_MAX_REQUESTS=2000
      - DB_CONNECTION_POOL_SIZE=20
      - MODEL_CACHE_SIZE=2048

# Production secrets configuration
secretGenerator:
  - name: prod-secrets
    behavior: merge
    envs:
      - secrets.env

# Container image configuration
images:
  - name: api-gateway
    newName: registry.company.com/ai-travel-platform/api-gateway
    newTag: 1.0.0
  - name: booking-service
    newName: registry.company.com/ai-travel-platform/booking-service
    newTag: 1.0.0
  - name: ml-service
    newName: registry.company.com/ai-travel-platform/ml-service
    newTag: 1.0.0
  - name: persona-service
    newName: registry.company.com/ai-travel-platform/persona-service
    newTag: 1.0.0
  - name: professional-service
    newName: registry.company.com/ai-travel-platform/professional-service
    newTag: 1.0.0
  - name: social-service
    newName: registry.company.com/ai-travel-platform/social-service
    newTag: 1.0.0

# Replacement transformers for production-specific values
replacements:
  - source:
      kind: ConfigMap
      name: prod-env-config
      fieldPath: data.NODE_ENV
    targets:
      - select:
          kind: Deployment
        fieldPaths:
          - spec.template.spec.containers.[name=.*].env.[name=NODE_ENV].value