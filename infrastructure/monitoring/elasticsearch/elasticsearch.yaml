# Production-grade Elasticsearch deployment manifest
# Version: 8.7.x
# Security: Enhanced with TLS, encryption, and network policies
# HA: 3-node cluster with anti-affinity and rolling updates

apiVersion: v1
kind: List
items:
# StatefulSet for Elasticsearch cluster
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    name: elasticsearch
    namespace: monitoring
    labels:
      app: elasticsearch
      version: "8.7"
  spec:
    serviceName: elasticsearch
    replicas: 3
    updateStrategy:
      type: RollingUpdate
    selector:
      matchLabels:
        app: elasticsearch
    template:
      metadata:
        labels:
          app: elasticsearch
      spec:
        securityContext:
          fsGroup: 1000
          runAsUser: 1000
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - elasticsearch
              topologyKey: "kubernetes.io/hostname"
        initContainers:
        - name: fix-permissions
          image: busybox:1.32
          command: ["sh", "-c", "chown -R 1000:1000 /usr/share/elasticsearch/data"]
          volumeMounts:
          - name: data
            mountPath: /usr/share/elasticsearch/data
        containers:
        - name: elasticsearch
          image: docker.elastic.co/elasticsearch/elasticsearch:8.7.1
          resources:
            requests:
              memory: "4Gi"
              cpu: "2"
            limits:
              memory: "8Gi"
              cpu: "4"
          env:
          - name: ES_JAVA_OPTS
            value: "-Xms2g -Xmx2g"
          - name: node.name
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          envFrom:
          - configMapRef:
              name: elasticsearch-config
          ports:
          - name: rest
            containerPort: 9200
            protocol: TCP
          - name: inter-node
            containerPort: 9300
            protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 9300
            initialDelaySeconds: 60
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /_cluster/health
              port: 9200
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
          volumeMounts:
          - name: data
            mountPath: /usr/share/elasticsearch/data
          - name: elasticsearch-config
            mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
            subPath: elasticsearch.yml
        volumes:
        - name: elasticsearch-config
          configMap:
            name: elasticsearch-config
    volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: gp2-encrypted
        resources:
          requests:
            storage: 100Gi

# Service for Elasticsearch cluster
- apiVersion: v1
  kind: Service
  metadata:
    name: elasticsearch
    namespace: monitoring
    labels:
      app: elasticsearch
  spec:
    type: ClusterIP
    selector:
      app: elasticsearch
    ports:
    - name: rest
      port: 9200
      protocol: TCP
      targetPort: 9200
    - name: inter-node
      port: 9300
      protocol: TCP
      targetPort: 9300

# ConfigMap for Elasticsearch configuration
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: elasticsearch-config
    namespace: monitoring
  data:
    elasticsearch.yml: |
      cluster.name: ai-travel-platform-es
      node.roles: ["master", "data"]
      network.host: 0.0.0.0
      discovery.seed_hosts: "elasticsearch-0.elasticsearch,elasticsearch-1.elasticsearch,elasticsearch-2.elasticsearch"
      cluster.initial_master_nodes: "elasticsearch-0,elasticsearch-1,elasticsearch-2"
      
      # Security Configuration
      xpack.security.enabled: true
      xpack.security.transport.ssl.enabled: true
      xpack.security.http.ssl.enabled: true
      xpack.security.audit.enabled: true
      
      # Monitoring Configuration
      xpack.monitoring.collection.enabled: true
      
      # Performance Tuning
      indices.memory.index_buffer_size: "30%"
      thread_pool.write.queue_size: 1000
      indices.queries.cache.size: "20%"
      
      # Data Path Settings
      path.data: /usr/share/elasticsearch/data
      path.logs: /usr/share/elasticsearch/logs

# PersistentVolumeClaim for Elasticsearch data
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: elasticsearch-data
    namespace: monitoring
  spec:
    accessModes:
    - ReadWriteOnce
    storageClassName: gp2-encrypted
    resources:
      requests:
        storage: 100Gi

# NetworkPolicy for Elasticsearch
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    name: elasticsearch-network-policy
    namespace: monitoring
  spec:
    podSelector:
      matchLabels:
        app: elasticsearch
    policyTypes:
    - Ingress
    ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            name: monitoring
      ports:
      - protocol: TCP
        port: 9200
      - protocol: TCP
        port: 9300