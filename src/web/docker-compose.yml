version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
      args:
        NODE_VERSION: '18.17-alpine3.17'
        BUILD_MODE: 'development'
    container_name: ai_travel_web_dev
    ports:
      - "3000:3000"  # Main application port
      - "9229:9229"  # Node.js debugging port
    volumes:
      - .:/app:cached  # Mount source code with cached option for better performance
      - node_modules:/app/node_modules  # Anonymous volume for node_modules
      - next_cache:/app/.next  # Anonymous volume for Next.js cache
    environment:
      - NODE_ENV=development
      - PORT=3000
      - NEXT_TELEMETRY_DISABLED=1
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:3000/api/v1
      - NEXT_PUBLIC_WS_URL=ws://localhost:3000/ws
      - NEXT_PUBLIC_ENV=development
      - NEXT_PUBLIC_DEBUG=true
      - NEXT_PUBLIC_HOT_RELOAD=true
      - NEXT_PUBLIC_ERROR_REPORTING=true
      - NEXT_PUBLIC_PERFORMANCE_MONITORING=true
    command: npm run dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - web_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true
    init: true
    ulimits:
      nofile:
        soft: 1024
        hard: 2048
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G

volumes:
  node_modules:
    driver: local
  next_cache:
    driver: local

networks:
  web_network:
    driver: bridge
    name: ai_travel_dev
    attachable: true
    driver_opts:
      com.docker.network.bridge.name: ai_travel_dev