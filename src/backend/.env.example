# =============================================================================
# AI-Enhanced Social Travel Platform - Environment Configuration
# Version: 1.0.0
# Last Updated: 2024
# =============================================================================

# -----------------------------------------------------------------------------
# GENERAL CONFIGURATION
# Core application settings affecting all services
# -----------------------------------------------------------------------------
# Application environment - Controls logging, optimization, and security settings
# Valid values: development, staging, production
NODE_ENV=development

# Default service port (1024-65535)
PORT=3000

# Application logging level
# Valid values: error, warn, info, debug, trace
LOG_LEVEL=info

# -----------------------------------------------------------------------------
# API GATEWAY CONFIGURATION
# Kong API Gateway settings for routing, security, and rate limiting
# -----------------------------------------------------------------------------
# Kong admin API address (restricted to internal network in production)
KONG_ADMIN_LISTEN=0.0.0.0:8001

# Kong proxy listener address (public endpoint for API requests)
KONG_PROXY_LISTEN=0.0.0.0:8000

# JWT signing secret (min 32 chars, high entropy)
# SECURITY CRITICAL: Use a strong random generator in production
JWT_SECRET=your-secret-key

# JWT token expiry time (format: number + s/m/h/d)
TOKEN_EXPIRY=24h

# -----------------------------------------------------------------------------
# DATABASE CONFIGURATION
# PostgreSQL database connection and security settings
# -----------------------------------------------------------------------------
# PostgreSQL host address (use internal DNS in production)
DB_HOST=localhost

# PostgreSQL port (1024-65535)
DB_PORT=5432

# PostgreSQL username (use service accounts in production)
DB_USERNAME=postgres

# PostgreSQL password (min 16 chars, high complexity)
# SECURITY CRITICAL: Use strong password meeting complexity requirements
DB_PASSWORD=your-password

# PostgreSQL database name (environment-specific)
DB_DATABASE=ai_travel_platform

# Enable SSL for database connection (required in production)
DB_SSL=true

# -----------------------------------------------------------------------------
# REDIS CONFIGURATION
# Redis cache server settings for session and data caching
# -----------------------------------------------------------------------------
# Redis host address (use internal DNS in production)
REDIS_HOST=localhost

# Redis port (1024-65535)
REDIS_PORT=6379

# Redis password (min 16 chars, high entropy)
# SECURITY CRITICAL: Use strong password in production
REDIS_PASSWORD=your-redis-password

# -----------------------------------------------------------------------------
# ML SERVICE CONFIGURATION
# Machine learning service settings for AI personas and recommendations
# -----------------------------------------------------------------------------
# ML models configuration path (absolute path in production)
ML_CONFIG_PATH=config/models

# ML models version (semantic versioning)
ML_MODEL_VERSION=1.0.0

# ML inference timeout in milliseconds (1000-30000)
ML_INFERENCE_TIMEOUT=5000

# -----------------------------------------------------------------------------
# AMADEUS API CONFIGURATION
# Amadeus GDS integration settings for travel bookings
# -----------------------------------------------------------------------------
# Amadeus API client ID (environment-specific)
# SECURITY CRITICAL: Use separate credentials per environment
AMADEUS_CLIENT_ID=your-client-id

# Amadeus API client secret (min 32 chars)
# SECURITY CRITICAL: Secure storage required
AMADEUS_CLIENT_SECRET=your-client-secret

# Amadeus API environment (must match deployment)
# Valid values: test, production
AMADEUS_API_ENV=test

# -----------------------------------------------------------------------------
# PAYMENT CONFIGURATION
# Stripe payment processing integration settings
# -----------------------------------------------------------------------------
# Stripe API secret key (environment-specific)
# SECURITY CRITICAL: Must start with sk_test_* or sk_live_*
STRIPE_SECRET_KEY=your-stripe-secret

# Stripe webhook signing secret (unique per environment)
# SECURITY CRITICAL: Must start with whsec_*
STRIPE_WEBHOOK_SECRET=your-webhook-secret